version: "3.9"
services:
  sp-nginx:
    image: nginx:alpine
    container_name: sp-nginx
    restart: always
    ports:
      - 80:80
      - 24672:24672
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/site.conf:/etc/nginx/sites-enabled/site.conf
      - ./nginx/logs:/var/log/nginx
    depends_on:
      - sp-frontend
      - sp-backend

  sp-frontend:
    image: node:alpine
    container_name: sp-frontend
    command: npm run dev
    restart: always
    working_dir: /frontend
    volumes:
      - ./frontend:/frontend
      - ./backend:/backend
    environment:
      PORT: 8080
      DOMAIN: 'http://localhost'
      NODE_ENV: "development"
      SP_CLIENT_ID: ${SP_CLIENT_ID}

  sp-backend:
    image: node:alpine
    container_name: sp-backend
    command: npm run dev
    working_dir: /backend
    volumes:
      - ./backend:/backend
    environment:
      DOMAIN: 'http://localhost'
      NODE_ENV: development
      PGHOST: sp-database
      PGUSER: postgres
      SP_CLIENT_ID: ${SP_CLIENT_ID}
      SP_CLIENT_SECRET: ${SP_CLIENT_SECRET}
      SERVER_TOKEN: ${SERVER_TOKEN}
      PGPASSWORD: ${DATABASE_PASSWORD}
    depends_on:
      - sp-database

  sp-database:
    image: postgres:15.3-alpine
    container_name: sp-database
    restart: always
    environment:
      POSTGRES_PASSWORD: ${DATABASE_PASSWORD}
    volumes:
      - ./database:/var/lib/postgresql/data
      - ./database.sql:/docker-entrypoint-initdb.d/database_init.sql
