services:
  automated-playlists-nginx:
    image: nginx:alpine
    container_name: automated-playlists-nginx
    restart: unless-stopped
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/site.conf:/etc/nginx/sites-enabled/site.conf
      - ./nginx/logs:/var/log/nginx
    depends_on:
      - automated-playlists-frontend
      - automated-playlists-backend
    ports:
      - 8010:8000

  automated-playlists-frontend:
    user: 1000:1000
    image: node:alpine
    container_name: automated-playlists-frontend
    command: npm run dev
    restart: unless-stopped
    working_dir: /frontend
    volumes:
      - ./frontend:/frontend
      - ./backend:/backend
    environment:
      PORT: 8000
      AP_CLIENT_ID: ${AP_CLIENT_ID}

  automated-playlists-backend:
    user: 1000:1000
    image: node:alpine
    container_name: automated-playlists-backend
    command: npm run dev
    working_dir: /backend
    restart: unless-stopped
    volumes:
      - ./backend:/backend
    environment:
      NODE_ENV: development
      PGHOST: automated-playlists-database
      PGUSER: postgres
      AP_CLIENT_ID: ${AP_CLIENT_ID}
      AP_CLIENT_SECRET: ${AP_CLIENT_SECRET}
      SERVER_TOKEN: ${SERVER_TOKEN}
      PGPASSWORD: ${DATABASE_PASSWORD}
      REDIS_HOST: automated-playlists-cache
      REDIS_PORT: 6379
      REDIS_PASSWORD: ${REDIS_PASSWORD}
    depends_on:
      - automated-playlists-database
      - automated-playlists-cache

  automated-playlists-cache:
    user: 1000:1000
    image: redis:7.0-alpine
    container_name: automated-playlists-cache
    restart: unless-stopped
    command: redis-server --save 20 1 --loglevel warning --requirepass ${REDIS_PASSWORD}
    volumes:
      - ./cache:/data

  automated-playlists-database:
    user: 1000:1000
    image: postgres:15.3-alpine
    container_name: automated-playlists-database
    restart: unless-stopped
    environment:
      POSTGRES_PASSWORD: ${DATABASE_PASSWORD}
    volumes:
      - ./database:/var/lib/postgresql/data
      - ./database.sql:/docker-entrypoint-initdb.d/database_init.sql
